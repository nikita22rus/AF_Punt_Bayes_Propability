{
    "cells": [
        {
            "cell_type": "code",
            "execution_count": 1,
            "metadata": {},
            "outputs": [
                {
                    "name": "stdout",
                    "output_type": "stream",
                    "text": [
                        "From statistics:\n",
                        "Chance to touchdown: 0.21764387890894732 \n",
                        "Chance to realize the attempt: 0.5502900847224862 \n",
                        "Chance to got touchdown if the attempt is unsuccessful: 0.34620990915117467 \n",
                        "Chance that we will be brought in the reciprocal possession, if the attempt is successful: 0.2613641370248118 \n",
                        "Chance to got touchdown after the pant: 0.14643849949221976\n",
                        "\n",
                        "Prior odds (before making a decision):\n",
                        "Chance to make touchdown: 0.11976726856413515 \n",
                        "Chance to got touchdown if attempt fails: 0.1556940289126105 \n",
                        "Chance to got touchdown if attempt is successful: 0.1438260931068032\n",
                        "\n",
                        "-----------------------------\n",
                        "\n",
                        "Position on the field: 50, \n",
                        "Before the first down: 5 \n",
                        "Positions after the pant: 80\n",
                        "\n",
                        "-----------------------------\n",
                        "\n",
                        "Balance (amount) of possible damage for two possessions:\n",
                        "Damage when playing the 4th attempt:  1.08 points \n",
                        "Damage when play the pant:  0.88 points\n",
                        "\n",
                        "I recommend playing the pant, it is more profitable by  0.20 points for two possessions\n"
                    ]
                }
            ],
            "source": [
                "from scipy.interpolate import interp1d\n",
                "import numpy as np\n",
                "import matplotlib.pyplot as plt\n",
                "import pandas as pd\n",
                "\n",
                "stat_own_touchdown_yards = np.array([10, 30, 55, 70, 99])\n",
                "stat_own_touchdown_chances = np.array([0.01, 0.1, 0.25, 0.4, 0.99])\n",
                "# df = pd.read_excel('own_touchdown_stat.xlsx', header=None)\n",
                "# stat_own_touchdown_yards = df[df.columns[0]].values\n",
                "# stat_own_touchdown_chances = df[df.columns[1]].values\n",
                "\n",
                "stat_own_touchdown_yards = np.insert(stat_own_touchdown_yards, 0, 0)\n",
                "stat_own_touchdown_chances = np.insert(stat_own_touchdown_chances, 0, 0)\n",
                "stat_own_touchdown_yards = np.append(stat_own_touchdown_yards, 100)\n",
                "stat_own_touchdown_chances = np.append(stat_own_touchdown_chances, 1)\n",
                "\n",
                "\n",
                "stat_opponent_touchdown_yards = np.array([10, 30, 55, 70, 99])\n",
                "stat_opponent_touchdown_chances = np.array([0.9, 0.6, 0.3, 0.2, 0.01])\n",
                "# df = pd.read_excel('opponent_touchdown_stat.xlsx', header=None)\n",
                "# stat_opponent_touchdown_yards = df[df.columns[0]].values\n",
                "# stat_opponent_touchdown_chances = df[df.columns[1]].values\n",
                "\n",
                "stat_opponent_touchdown_yards = np.insert(stat_opponent_touchdown_yards, 0, 0)\n",
                "stat_opponent_touchdown_chances = np.insert(stat_opponent_touchdown_chances, 0, 1)\n",
                "stat_opponent_touchdown_yards = np.append(stat_opponent_touchdown_yards, 100)\n",
                "stat_opponent_touchdown_chances = np.append(stat_opponent_touchdown_chances, 0)\n",
                "\n",
                "\n",
                "stat_attempt_yards = np.array([1, 3, 6, 10, 15])\n",
                "stat_attempt_chances = np.array([0.9, 0.7, 0.5, 0.4, 0.2])\n",
                "# df = pd.read_excel('attempt_stat.xlsx', header=None)\n",
                "# stat_attempt_yards = df[df.columns[0]].values\n",
                "# stat_attempt_chances = df[df.columns[1]].values\n",
                "stat_attempt_chances = stat_attempt_chances[stat_attempt_yards < 20]\n",
                "stat_attempt_yards = stat_attempt_yards[stat_attempt_yards < 20]\n",
                "\n",
                "stat_attempt_yards = np.insert(stat_attempt_yards, 0, 0)\n",
                "stat_attempt_chances = np.insert(stat_attempt_chances, 0, 1)\n",
                "stat_attempt_yards = np.append(stat_attempt_yards, 20)\n",
                "stat_attempt_chances = np.append(stat_attempt_chances, 0.01)\n",
                "\n",
                "\n",
                "first_attempt_distribution = interp1d(stat_attempt_yards, stat_attempt_chances, kind='cubic')\n",
                "own_touchdown_distribution = interp1d(stat_own_touchdown_yards, stat_own_touchdown_chances, kind='cubic')\n",
                "opponent_touchdown_distribution = interp1d(stat_opponent_touchdown_yards, stat_opponent_touchdown_chances, kind='cubic')\n",
                "\n",
                "field_yards = np.linspace(0, 100, num=101, endpoint=True)\n",
                "attempt_yards = np.linspace(0, 20, num=21, endpoint=True)\n",
                "\n",
                "\n",
                "\n",
                "# the probability distribution of taking the first attempt by the number of yards before the first attempt\n",
                "first_attempt_chances = first_attempt_distribution(attempt_yards)\n",
                "\n",
                "# probability distribution of touchdown from situation 1-10 along the field length\n",
                "own_touchdown_chances = own_touchdown_distribution(field_yards)\n",
                "\n",
                "# the probability distribution of missing a touchdown from situation 1-10 along the field length\n",
                "opponent_touchdown_chances = opponent_touchdown_distribution(field_yards)\n",
                "\n",
                "k = 30\n",
                "\n",
                "i = 50\n",
                "j = 5\n",
                "\n",
                "play_4_damage = opponent_touchdown_chances[i] * (1 - first_attempt_chances[j]) + opponent_touchdown_chances[30 + k] * first_attempt_chances[j] - own_touchdown_chances[i] * first_attempt_chances[j] \n",
                "\n",
                "pant_i = i + k\n",
                "if pant_i > 99:\n",
                "  pant_i = 99\n",
                "\n",
                "pant_damage = opponent_touchdown_chances[pant_i]\n",
                "\n",
                "print(\"From statistics:\")\n",
                "print(\"Chance to touchdown: {} \\nChance to realize the attempt: {} \\nChance to got touchdown if the attempt is unsuccessful: {} \\nChance that we will be brought in the reciprocal possession, if the attempt is successful: {} \\nChance to got touchdown after the pant: {}\".format(\n",
                "    own_touchdown_chances[i], first_attempt_chances[j], opponent_touchdown_chances[i], opponent_touchdown_chances[30 + k], opponent_touchdown_chances[pant_i]))\n",
                "\n",
                "print()\n",
                "print(\"Prior odds (before making a decision):\")\n",
                "print(\"Chance to make touchdown: {} \\nChance to got touchdown if attempt fails: {} \\nChance to got touchdown if attempt is successful: {}\".format(\n",
                "    (own_touchdown_chances[i] * first_attempt_chances[j]), (opponent_touchdown_chances[i] * (1 - first_attempt_chances[j])), (opponent_touchdown_chances[30 + k] * first_attempt_chances[j])))\n",
                "\n",
                "print()\n",
                "print(\"-----------------------------\")\n",
                "print()\n",
                "print(\"Position on the field: {}, \\nBefore the first down: {} \\nPositions after the pant: {}\".format(i, j, pant_i))\n",
                "print()\n",
                "print(\"-----------------------------\")\n",
                "print()\n",
                "print(\"Balance (amount) of possible damage for two possessions:\")\n",
                "print(\"Damage when playing the 4th attempt: {0: 0.2f} points \\nDamage when play the pant: {1: 0.2f} points\".format(play_4_damage*6, pant_damage*6))\n",
                "\n",
                "print()\n",
                "if play_4_damage <= pant_damage:\n",
                "  print(\"I recommend playing the 4th try, it is {0: 0.2f} more profitable for two possessions\".format(pant_damage*6 - play_4_damage*6))\n",
                "else:\n",
                "  print(\"I recommend playing the pant, it is more profitable by {0: 0.2f} points for two possessions\".format(play_4_damage*6 - pant_damage*6))"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": []
        }
    ],
    "metadata": {
        "kernelspec": {
            "display_name": "Python 3",
            "language": "python",
            "name": "python3"
        },
        "language_info": {
            "codemirror_mode": {
                "name": "ipython",
                "version": 3
            },
            "file_extension": ".py",
            "mimetype": "text/x-python",
            "name": "python",
            "nbconvert_exporter": "python",
            "pygments_lexer": "ipython3",
            "version": "3.8.5"
        }
    },
    "nbformat": 4,
    "nbformat_minor": 4
}
